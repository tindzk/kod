# See also http://en.wikipedia.org/wiki/Covariance_and_contravariance_%28computer_science%29

# The default in kod is invariance. Covariance can be set for a type
# parameter by placing a plus sign in front of the identifier. For contravariance
# a minus must be used instead.

# Covariance
class Stack<+A>:
	push(A elem): pass
	A top(): pass
	pop(): pass
	toStr(): pass

test(Stack<Str> s): pass

# Due to the +A, there is a subtyping relationship between Stack<Cat> and Stack<Animal>
# if Cat extends Animal.

class Components<+V extends Component> extends HashMap<Str, V>

# Usage of the covariant stack.
stack := Stack<Str>()

# Valid due to subtyping relationship.
test(Stack<MyStr>())

map := Components<Label>()
map.add({ "lbl1": Label(),
		  "lbl2": Label() })